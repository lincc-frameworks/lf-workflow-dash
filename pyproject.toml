
[project]
name = "lf_workflow_dash"
license = "MIT"
license-files = ["LICENSE"]
readme = "README.md"
authors = [
    { name = "LINCC Frameworks", email = "lincc-frameworks-team@lists.lsst.org" }
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
]
dynamic = ["version"]
requires-python = ">=3.9"
dependencies = [
    "jinja2",
    "pyyaml",
    "pytz",
    "requests",
    "human_readable",
]

[project.urls]
"Source Code" = "https://github.com/lincc-frameworks/lf_workflow_dash"

# On a mac, install optional dependencies with `pip install '.[dev]'` (include the single quotes)
[project.optional-dependencies]
dev = [
    "black", # Used for static linting of files
    "jupyter", # Clears output from Jupyter notebooks
    "pre-commit", # Used to run checks before finalizing a git commit
    "pylint", # Used for static linting of files
    "pytest",
    "pytest-cov", # Used to report total code coverage
]

[build-system]
requires = [
    "setuptools>=62", # Used to build and package the Python project
    "setuptools_scm>=6.2", # Gets release version from git. Makes it available programmatically
]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
write_to = "src/lf_workflow_dash/_version.py"

[tool.pytest.ini_options]
testpaths = [
    "tests",
    "src",
    "docs",
]
addopts = "--doctest-modules --doctest-glob=*.rst"

[tool.black]
line-length = 110
target-version = ["py39"]
[tool.isort]
profile = "black"
line_length = 110


[tool.coverage.run]
omit=["src/lf_workflow_dash/_version.py"]
